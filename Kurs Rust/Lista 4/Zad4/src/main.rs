fn my_first_interpreter(code: &str) -> String {
    let mut state: u8 = 0;
    let mut res = String::new();
    for x in code.chars(){
        if x == '+'{
            if state == 255{
                state = 0;
            }
            else{
                state += 1;
            }
        }
        else if x == '.'{
            res.push(state as char)
        }
    }
    return res;
}

fn main() {
}

#[test]
fn test1() {
    assert_eq!(my_first_interpreter("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+.+."), "ABCDEFGHIJKLMNOPQRSTUVWXYZ");
}
#[test]
fn test2() {
    assert_eq!(my_first_interpreterello, World!");
}
#[test]
fn test3() {
    assert_eq!(my_first_interpreter("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.+++++.+++++.++++."), "HMRV");
}
#[test]
fn test4() {
    assert_eq!(my_first_interpreter("++++++++++++++++++++++++++++++++++.++++.++++++.++++++++++++++++++++++++++++.+++++.+++++.++++."), "\"&,HMRV");
}
#[test]
fn test5() {
    assert_eq!(my_first_interpreterelloÂ½, WorldÃƒ!");
}
#[test]
fn test6() {
    assert_eq!(my_first_interpreter(""), "");
}
#[test]
fn test7() {
    assert_eq!(my_first_interpreter("+++++"), "");
}
#[test]
fn test8() {
    assert_eq!(my_first_interpreter("++++++++++++++++++++++++++++++++++++++++++++++++.+.+.+.+.+.+.+.+.+."), "0123456789");
}
#[test]
fn test9() {
    assert_eq!(my_first_interpreter("+++++++++++++++++++++++++++++++++."), "!");
}
#[test]
fn test10() {
    assert_eq!(my_first_interpreter("++++++++++++++++++++++++++++++++++."), "\"");
}
